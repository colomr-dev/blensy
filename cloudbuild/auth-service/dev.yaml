steps:
  # Paso 1: Obtener configuración de Firebase
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "$$FIREBASE_CONFIG" | tee .env > /dev/null
    secretEnv: ['FIREBASE_CONFIG']

  # Paso 2: Construir la imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
    - 'build'
    - '-f'
    - 'src/web/auth/Dockerfile'
    - '-t'
    - '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:$SHORT_SHA'
    - '-t'
    - '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:latest'
    - '--build-arg'
    - 'NODE_ENV=production'
    - '.' # Contexto de build en la raíz del repositorio

  # Paso 3: Subir la imagen a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
    - 'push'
    - '${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/blensy-artifacts-dev/auth-service/auth-service:${SHORT_SHA}'

  # Paso 4: Desplegar en Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'auth-service-dev'
    - '--image'
    - '${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/blensy-artifacts-dev/auth-service/auth-service:${SHORT_SHA}'
    - '--region'
    - '${_CLOUD_RUN_REGION}'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'  # ¡CUIDADO!  Revisar esta opción para producción
    - '--service-account'
    - 'blensy-services-dev@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--set-env-vars'
    - 'ENVIRONMENT=development'

# Configuración de secretos
availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/firebase-config/versions/latest
      env: 'FIREBASE_CONFIG'

# Opciones de configuración
options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

# Tags para identificar el build
tags: ['dev', 'auth-service']

# Variables sustituibles
substitutions:
  _CLOUD_RUN_REGION: 'europe-southwest1'
  _ARTIFACT_REGISTRY_DOMAIN: 'europe-southwest1-docker.pkg.dev'