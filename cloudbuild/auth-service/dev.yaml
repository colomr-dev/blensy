steps:
  # Obtener configuración de Firebase desde Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "$$FIREBASE_CONFIG" > .env
    secretEnv: ['FIREBASE_CONFIG']

  # Build de la imagen Docker
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-f', 'src/web/auth/Dockerfile',  # Ruta específica del Dockerfile
    '-t', '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:$SHORT_SHA',
    '-t', '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:latest',
    'src/web/auth'  # Contexto de build (directorio raíz para la construcción)
  ]

  # Push de la imagen al Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:$SHORT_SHA'
    ]

  # Despliegue en Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run',
      'deploy',
      'auth-service-dev',
      '--image', '$_ARTIFACT_REGISTRY_DOMAIN/$PROJECT_ID/blensy-artifacts-dev/auth-service/auth-service:$SHORT_SHA',
      '--region', '$_CLOUD_RUN_REGION',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--service-account', 'blensy-services-dev@$PROJECT_ID.iam.gserviceaccount.com',
      '--set-env-vars', 'ENVIRONMENT=development'
    ]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/firebase-config/versions/latest
      env: 'FIREBASE_CONFIG'

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

tags: ['dev', 'auth-service']

# Valores por defecto para las variables personalizadas
substitutions:
  _CLOUD_RUN_REGION: 'europe-southwest1'
  _ARTIFACT_REGISTRY_DOMAIN: 'europe-southwest1-docker.pkg.dev'